START TRANSACTION;

CREATE DATABASE IF NOT EXISTS `didiseeit`;

USE `didiseeit`;

DROP TABLE IF EXISTS `View`;
DROP TABLE IF EXISTS `Collection`;
DROP TABLE IF EXISTS `Media`;
DROP TABLE IF EXISTS `User`;
DROP TABLE IF EXISTS `MediaType`;

CREATE TABLE `MediaType` (
    `Id`INT NOT NULL AUTO_INCREMENT,
    `Type` VARCHAR(128) NOT NULL,
    PRIMARY KEY (`Id`)
);

CREATE TABLE `Media` (
    `Id` INT NOT NULL AUTO_INCREMENT,
    `MediaTypeId` INT NOT NULL,
    `Title` VARCHAR(255) NOT NULL,
    `Year` INT NOT NULL,
    PRIMARY KEY (`Id`),
    FOREIGN KEY (`MediaTypeId`) REFERENCES `MediaType`(`Id`)
);

CREATE TABLE `User` (
    `Id` INT NOT NULL AUTO_INCREMENT,
    `Username` VARCHAR(255) NOT NULL,
    `Email` VARCHAR(255) NOT NULL,
    `PassHash` VARCHAR(255) NOT NULL,
    PRIMARY KEY (`Id`),
    UNIQUE (`Username`),
    UNIQUE (`Email`)
);

CREATE TABLE `Collection` (
    `Id` INT NOT NULL AUTO_INCREMENT,
    `UserId` INT NOT NULL,
    `Name` VARCHAR(255) NOT NULL,
    `Created` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `Updated` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`Id`),
    FOREIGN KEY (`UserId`) REFERENCES `User`(`Id`)
);

CREATE TABLE `View` (
    `Id` INT NOT NULL AUTO_INCREMENT,
    `CollectionId` INT NOT NULL,
    `MediaId` INT NOT NULL,
    `Created` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `Updated` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`Id`),
    FOREIGN KEY (`CollectionId`) REFERENCES `Collection`(`Id`),
    FOREIGN KEY (`MediaId`) REFERENCES `Media`(`Id`),
    UNIQUE KEY (`CollectionId`, `MediaId`) -- Each collection can only contain any media once.
);

COMMIT;